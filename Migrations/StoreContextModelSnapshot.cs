// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactShope.Data;

namespace ReactShope.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ReactShope.Entity.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("ReactShope.Entity.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItem");
                });

            modelBuilder.Entity("ReactShope.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "HP",
                            Description = "HP Chromebook 14 Intel Celeron N4020-4GB S… HPHP",
                            Name = "HP Chromebook 14",
                            PictureUrl = "https://images-eu.ssl-images-amazon.com/images/I/513LujQCoXL._AC_SX184_.jpg",
                            Price = 300L,
                            QuantityInStock = 18,
                            Type = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "boat",
                            Description = "boAt Rockerz 255 Pro in-Ear Earphones with 10… boAtboAt",
                            Name = "boAt Rockerz 255 Pro",
                            PictureUrl = "https://images-eu.ssl-images-amazon.com/images/I/31PU4kWou+L._AC_SX184_.jpg",
                            Price = 1200L,
                            QuantityInStock = 20,
                            Type = "HeadPhone"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Nicon",
                            Description = "Nikon Z7 Mirrorless Camera Body with 24-… NikonNikon",
                            Name = "Nikon Z7",
                            PictureUrl = "https://images-eu.ssl-images-amazon.com/images/I/41ecM6cGpxL._AC_SX184_.jpg",
                            Price = 1200L,
                            QuantityInStock = 20,
                            Type = "HeadPhone"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "LG",
                            Description = "LG Gram Intel Evo 11th Gen Core i7 17 inches Ultra-Light Laptop (16 GB RAM, 512 GB SSD, New Windows 11 Home Preload, Iris Xe Graphics, USC -C x 2 (with Power), 1.35 kg, 17Z90P-G.AH85A2, Black)LG Gram Intel Evo 11th Gen Core i7",
                            Name = "LG Gram ",
                            PictureUrl = "https://images-eu.ssl-images-amazon.com/images/I/416Am14drmL._AC_SX184_.jpg",
                            Price = 200L,
                            QuantityInStock = 10,
                            Type = "Laptop"
                        });
                });

            modelBuilder.Entity("ReactShope.Entity.BasketItem", b =>
                {
                    b.HasOne("ReactShope.Entity.Basket", "Basket")
                        .WithMany("Items")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReactShope.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReactShope.Entity.Basket", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
